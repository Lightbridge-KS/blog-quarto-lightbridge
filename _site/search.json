[
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html",
    "href": "posts/2022-04-03_lm-penguins/index.html",
    "title": "Linear Regression Models",
    "section": "",
    "text": "Let’s explore linear regression models. The data I will be using is penguins dataset from palmerpenguins package [1]."
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#plotting",
    "href": "posts/2022-04-03_lm-penguins/index.html#plotting",
    "title": "Linear Regression Models",
    "section": "Plotting",
    "text": "Plotting\nNow, Let’s visualize a scatter plot between these 2 variables.\n\n\nCode\np1 <- penguins %>% \n  ggplot(aes(bill_depth_mm, body_mass_g)) +\n  geom_point(color = \"cyan4\", alpha = 0.7) +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Simple Linear Regression\")\n\np1\n\n\n\n\n\nFigure 1: Points represent each observations. Blue line is a simple linear regression fitted to the data.\n\n\n\n\nFigure 1 show relationships between body_mass_g and bill_depth_mm. Looking at these points, I can see 2 clouds of points: the upper-left group and the lower-right group.\nBy looking at the line, something strange is happening here, the line connects 2 clouds of points together with downward sloping; an increase in bill_depth_mm corresponding to a decrease of body_mass_g !\nIt’s a little weird right ?\nI will explore this further, but for now let’s assume that it is OK and continue to fit the model."
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#fitting-model",
    "href": "posts/2022-04-03_lm-penguins/index.html#fitting-model",
    "title": "Linear Regression Models",
    "section": "Fitting Model",
    "text": "Fitting Model\nI will use lm() function to fit the model, then the model’s summary will be shown by summary().\n\n\nCode\npen_lm_fit_simple <- lm(body_mass_g ~ bill_depth_mm, data = penguins)\nsummary(pen_lm_fit_simple)\n#> \n#> Call:\n#> lm(formula = body_mass_g ~ bill_depth_mm, data = penguins)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -1607.38  -510.10   -66.96   462.43  1819.28 \n#> \n#> Coefficients:\n#>               Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)    7488.65     335.22   22.34   <2e-16 ***\n#> bill_depth_mm  -191.64      19.42   -9.87   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 708.1 on 340 degrees of freedom\n#>   (2 observations deleted due to missingness)\n#> Multiple R-squared:  0.2227, Adjusted R-squared:  0.2204 \n#> F-statistic: 97.41 on 1 and 340 DF,  p-value: < 2.2e-16\n\n\nbroom::glance() will return model’s summary in a one-row tibble which can be easier to manipulate it later.\n\n\nCode\nbroom::glance(pen_lm_fit_simple)\n\n\n\n \n  \n    r.squared \n    adj.r.squared \n    sigma \n    statistic \n    p.value \n    df \n    logLik \n    AIC \n    BIC \n    deviance \n    df.residual \n    nobs \n  \n \n\n  \n    0.2227044 \n    0.2204182 \n    708.0772 \n    97.414 \n    0 \n    1 \n    -2728.667 \n    5463.334 \n    5474.839 \n    170466918 \n    340 \n    342"
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#summary",
    "href": "posts/2022-04-03_lm-penguins/index.html#summary",
    "title": "Linear Regression Models",
    "section": "Summary",
    "text": "Summary\n\n\n\n\n\n\nModel Summary\n\n\n\nThe linear regression model of body_mass_g on bill_depth_mm has an adjusted R2 = 0.22, p-value < 0.001; meaning that this model is statistically significant and 22% of variation in body_mass_g can be explained by bill_depth_mm.\n\n\nAutomated Report\n\nCode\nreport::report(pen_lm_fit_simple)  %>% summary() \n\nWe fitted a linear model to predict body_mass_g with bill_depth_mm. The model’s explanatory power is moderate (R2 = 0.22, adj. R2 = 0.22). The model’s intercept is at 7488.65 (95% CI [6829.29, 8148.01]). Within this model:\n\nThe effect of bill depth mm is statistically significant and negative (beta = -191.64, 95% CI [-229.84, -153.45], t(340) = -9.87, p < .001, Std. beta = -0.47)"
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#coefficient",
    "href": "posts/2022-04-03_lm-penguins/index.html#coefficient",
    "title": "Linear Regression Models",
    "section": "Coefficient",
    "text": "Coefficient\nThe estimated model coefficients can be written as Equation 1.\n\\[\n\\widehat{Wt} = 7488.7 - 191.6 \\times Bill.Depth\n\\qquad(1)\\]\n\n\n\n\n\n\nCoefficient Interpretation\n\n\n\nEvery 1 mm increases in bill depth corresponds to an estimated decreases of weight by -191.6 kg."
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#plotting-1",
    "href": "posts/2022-04-03_lm-penguins/index.html#plotting-1",
    "title": "Linear Regression Models",
    "section": "Plotting",
    "text": "Plotting\nLet’s make a scatter plot similar to Figure 1 with colors added to species.\n\n\nCode\np2 <- penguins %>% \n  ggplot(aes(bill_depth_mm, body_mass_g, color = species, shape = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  scale_color_brewer(palette = \"Set2\") +\n  labs(title = \"Multiple Linear Regression\")\n\np2\n\n\n\n\n\nFigure 2: 3 linear regressions by each species\n\n\n\n\nIn Figure 2, with color = species added to the plot, we can see that the upper-left cloud of points are Gentoo species and the lower-right are Adelie and Chinstrap. The interesting thing here is the 3 regression lines that fitted to each species has an upward slope which is contrast to the Figure 1.\n\n\n\n\n\n\nCompare Plots\n\n\n\nYou can see the plots of simple vs multiple linear regression side-by-side here."
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#fitting-model-1",
    "href": "posts/2022-04-03_lm-penguins/index.html#fitting-model-1",
    "title": "Linear Regression Models",
    "section": "Fitting Model",
    "text": "Fitting Model\nNext, The model will be fitted once again with an outcome variable: body_mass_g , and predictors: bill_depth_mm and species. I will use broom::tidy() to show model coefficients.\n\n\nCode\npen_lm_fit_multi <- lm(body_mass_g ~ bill_depth_mm + species, data = penguins)\n\nbroom::tidy(pen_lm_fit_multi)\n\n\n\n \n  \n    term \n    estimate \n    std.error \n    statistic \n    p.value \n  \n \n\n  \n    (Intercept) \n    -1007.28112 \n    323.56097 \n    -3.1131107 \n    0.0020093 \n  \n  \n    bill_depth_mm \n    256.61461 \n    17.56282 \n    14.6112380 \n    0.0000000 \n  \n  \n    speciesChinstrap \n    13.37732 \n    52.94712 \n    0.2526544 \n    0.8006889 \n  \n  \n    speciesGentoo \n    2238.66811 \n    73.68183 \n    30.3829071 \n    0.0000000 \n  \n\n\n\n\nbroom::glance() shows model overview as one-row data frame.\n\n\nCode\nbroom::glance(pen_lm_fit_multi)\n\n\n\n \n  \n    r.squared \n    adj.r.squared \n    sigma \n    statistic \n    p.value \n    df \n    logLik \n    AIC \n    BIC \n    deviance \n    df.residual \n    nobs \n  \n \n\n  \n    0.7975462 \n    0.7957493 \n    362.4362 \n    443.839 \n    0 \n    3 \n    -2498.619 \n    5007.239 \n    5026.413 \n    44399670 \n    338 \n    342"
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#summary-1",
    "href": "posts/2022-04-03_lm-penguins/index.html#summary-1",
    "title": "Linear Regression Models",
    "section": "Summary",
    "text": "Summary\n\n\n\n\n\n\nModel Summary\n\n\n\nThe linear regression model of body_mass_g on bill_depth_mm and species has an adjusted R2 = 0.8, p-value < 0.001; meaning that this model is statistically significant and 22% of variation in body_mass_g can be explained by bill_depth_mm and species.\n\n\nAutomated Report\n\nCode\nreport::report(pen_lm_fit_multi)  %>% summary() \n\nWe fitted a linear model to predict body_mass_g with bill_depth_mm and species. The model’s explanatory power is substantial (R2 = 0.80, adj. R2 = 0.80). The model’s intercept is at -1007.28 (95% CI [-1643.73, -370.83]). Within this model:\n\nThe effect of bill depth mm is statistically significant and positive (beta = 256.61, 95% CI [222.07, 291.16], t(338) = 14.61, p < .001, Std. beta = 0.63)\nThe effect of species [Chinstrap] is statistically non-significant and positive (beta = 13.38, 95% CI [-90.77, 117.52], t(338) = 0.25, p = 0.801, Std. beta = 0.02)\nThe effect of species [Gentoo] is statistically significant and positive (beta = 2238.67, 95% CI [2093.74, 2383.60], t(338) = 30.38, p < .001, Std. beta = 2.79)"
  },
  {
    "objectID": "posts/2022-04-03_lm-penguins/index.html#coefficient-1",
    "href": "posts/2022-04-03_lm-penguins/index.html#coefficient-1",
    "title": "Linear Regression Models",
    "section": "Coefficient",
    "text": "Coefficient\nThe estimated model coefficients can be written as Equation 2.\n\\[\n\\begin{aligned}\n\\widehat{Wt} = &- 1007.3 \\\\\n               &+ 256.6 \\times Bill.Depth \\\\\n               &+ 13.4 \\times SP_{Chinstrap} \\\\\n               &+ 2238.7 \\times SP_{Gentoo}\n\\end{aligned}\n\\qquad(2)\\]\nI use the notation \\(Var_{LV}\\) to represent indicator variables for when the categorical variable takes a particular value. For example \\(SP_{Chinstrap}\\) would take a value of 1 if the species is “Chinstrap”, and it would take a value of 0 otherwise. The same logic also applies to “Gentoo”.\nWe have seen from the Figure 2 that the models can be visualized as 3 regression lines for each species. Now we shall see whether coefficient of the model agree with the plot.\n\nSlope\nThe slope of the line is the coefficient of \\(Bill.Depth\\) as given by Equation 2, It means that the slope of each 3 lines is the same (= 256.6).\n\n\n\n\n\n\nSlope Interpretation\n\n\n\nFor every 1 mm increases in bill_depth_mm in any given species corresponds to an estimated increases in body_mass_g of 256.6.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIn this multiple regression example, It can be seen that the coefficient of bill_depth_mm after adjusting for species (256.6) is not the same as before when it is the only predictor (-191.6).\n\n\n\n\nDistances between Lines\nWe can estimate differences in body_mass_g among species when taking bill_depth_mm into account using Equation 2. The “Adelie” species is considered as baseline.\nFor example, using \\(SP_{Gentoo}\\) coefficient, we could say that “Gentoo” has an estimated weight of 2238.7 (g) more than “Adelie” for any given bill_depth_mm. Note that the effect of “Chinstrap” is non-significant as we can already see in the Figure 2 that Chinstrap’s line and Adelie’s line are, in fact, very close."
  },
  {
    "objectID": "posts/2022-03-17-shell-to-r-1/index.html",
    "href": "posts/2022-03-17-shell-to-r-1/index.html",
    "title": "Open and Create R project from Shell",
    "section": "",
    "text": "I am an R user who know a little bit of linux shell, one day I wonder…\nThis blog post will show you how to do that and hopefully you’ll learn something new and enjoy using it!\nWhat you’ll need\nIn the next demonstraction, I’ll walk you through by creating a shell function which you have to store it in ~/.bashrc or ~/.zshrc (or other locations that can be sourced) by yourself.\nBefore I started, I using macOs, and my shell is zsh running in a Terminal app. If you are using different shell, modify the code correspondingly."
  },
  {
    "objectID": "posts/2022-03-17-shell-to-r-1/index.html#quick-navigation",
    "href": "posts/2022-03-17-shell-to-r-1/index.html#quick-navigation",
    "title": "Open and Create R project from Shell",
    "section": "Quick Navigation",
    "text": "Quick Navigation\nHow to navigate to an R project quickly ? Lots of options can do it without using a mouse, e.g. using Spotlight Search in mac, but to day I’ll use command line.\nI like to group most of my R projects in a single directory (i.e. R_programming) so that I can navigate easily even with GUI. That will helpful when using CLI too.\nYou might already know cd command which change directory of a terminal, but typing cd multiple times can be time consuming.\n\nA simple solution is to creating a shell function to change directory to a parent folder which contains R projects.\n\n\n\nCode\n# Define a function to change directory\ncdrpg(){\n    cd \"/Users/kittipos/Desktop/R_Programming\"\n}\n\n# Call function to change directory to `R_Programming/`\ncdrpg\n\n# Print working directory\npwd\n\n\n/Users/kittipos/Desktop/R_Programming\n\n\nIn the code above.1\n\nI define a shell function cdrpg() that change directory to my R_programming folder\nI execute cdrpg, and the directory is then changed (to call function in shell, you don’t use parenthesis).\nCall pwd to confirm the location at R_Programming directory\n\nFor me, I store this function in a .zsh file that can be sourced by ~/.zshrc\ncd-to.zsh\n#!/bin/zsh\n\n# CD to R_Programming Folder\ncdrpg(){\n    cd \"/Users/kittipos/Desktop/R_Programming\"\n}\nAnd, make it executable by:\nchmod +x \"cd-to.zsh\"\nSo that every time I open shell, I could call cdrpg, and I would arriving at R_Programming directory.\nAnd I also define similar functions to cd to other frequently-visited locations in this cd-to.zsh script as well."
  },
  {
    "objectID": "posts/2022-03-17-shell-to-r-1/index.html#open-r-project",
    "href": "posts/2022-03-17-shell-to-r-1/index.html#open-r-project",
    "title": "Open and Create R project from Shell",
    "section": "Open R project",
    "text": "Open R project\nAfter I’ve arrived at R_Programming/ and cd to the sub-directory I wanted, I can open R project from shell with the following command\nopen *.Rproj\nThe result is similar to clicking .Rproj icon to open an RStudio project.\nTo save typing, I wrap this into openrpg() function and store it in a shell script which can be sourced by ~/.zshrc\nr-proj.zsh\n#!/bin/zsh\n# A function to open R project in current directory\nopenrpg(){\n    open *.Rproj\n}\nAnd, make it executable by:\nchmod +x \"r-proj.zsh\""
  },
  {
    "objectID": "posts/2022-03-17-shell-to-r-1/index.html#using-radian-console",
    "href": "posts/2022-03-17-shell-to-r-1/index.html#using-radian-console",
    "title": "Open and Create R project from Shell",
    "section": "Using Radian Console",
    "text": "Using Radian Console\nThe radian is a modern R console in the shell. First, enter R by running radian, then type any R code. The result looks pretty.\n\nTo create a new project, you can use usethis::create_project(\"path-to-project\")\n\nIt’s done!, however, there is quite a bit of typing.\nNext, I’ll show you to all of this plus open an R project being created all in one line of code with fewer characters."
  },
  {
    "objectID": "posts/2022-03-17-shell-to-r-1/index.html#create-r-project-directly-from-shell",
    "href": "posts/2022-03-17-shell-to-r-1/index.html#create-r-project-directly-from-shell",
    "title": "Open and Create R project from Shell",
    "section": "Create R Project directly from Shell",
    "text": "Create R Project directly from Shell\n\nThe Goal\nWhat I want to achieve is this…\nIf I run this command in shell,\nnewrpj \"foo\"\nthe R project “foo” should be created, then in my terminal it should cd to foo/ directory, and open foo.Rproj file in RStudio.\nWe’ll need to do a couple of things:\n\nExecute that R script from Shell, and also passing R project name as shell argument.\nPut all necessary R functions in an R script. I’ll call it new-rpj.R\nWrap all shell commands into one shell function\n\n\n\nExecute R Script from Shell\nCommand Line Basics for R Users show that Rscript command is the way to execute R script from shell.\nThe basic usage is quite simple.\nRscript \"/Users/kittipos/bin-ks/helper/R/new-rpg.R\" \"foo\"\nThis will execute new-rpj.R, and “foo” is a shell argument to be passed to the script.\n\n\nWrite R Script\nNow, let’s edit new-rpj.R\nnew-rpj.R\n# Retrieve Shell arguments\narg <- commandArgs(trailingOnly = TRUE)[1]\n\n# Show what parameter is being recieved\ncat(\"- Passing zsh parameter:\", arg)\n\n# Create R Project using name we've supply\nusethis::create_project(arg, rstudio = TRUE)\n\ncommandArgs() is a function to retrieve shell arguments, trailingOnly = TRUE will only get the one that we’ve supply, for more example see r-bloggers post.\nAssign the first shell argument to arg\ncat() to confirm the passing parameter.\nLastly, usethis::create_project() to create an R project with name from arg. Use rstudio = TRUE to also create .Rproj file.\n\nAfter saving this script new-rpg.R, try running this in the shell:\nRscript \"/Users/kittipos/bin-ks/helper/R/new-rpg.R\" \"foo\"\nIt should create R project “foo” as a sub-directory of your current working directory.\n\n\nWrap up everything\nFinally, let’s wrap-up everything by building newrpj function to create R project, change directory to the project folder, and open the project in RStudio.\nI store this function in r-proj.zsh which can be sourced by ~/.zshrc.\nr-proj.zsh\n#!/bin/zsh\n## Function to create new R Project, `cd` to the project, and open in RStudio\nnewrpj(){\n    # Create R project in a sub-directory with names from shell 1st argument\n    Rscript \"/Users/kittipos/bin-ks/helper/R/new-rpj.R\" \"$1\"\n    # Go into that sub-directory & Open R project in RStudio\n    cd \"$1\"\n    open *.Rproj\n}\n\nNotice $1 which is a shell variable that represents the first argument supplies to the newrpj() function, which, in this case, is an R project name.\n\nHere is the result of calling newrpj with argument “tester”\n\nCreated RStudio project named “tester”\nChange working directory to tester, and\nOpen RStudio"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\nA Simple Calculator\n\n\n\n\nR\n\n\nMed\n\n\nCalculator\n\n\n\n\nHow to program a simple TIMI risk score calculator for STEMI\n\n\n\n\n\n\nMay 3, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nStats\n\n\nPenguins\n\n\n\n\nLinear models with palmerpenguins\n\n\n\n\n\n\nApr 3, 2022\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nShell\n\n\nFun-Idea\n\n\n\n\nA fun tutorial involving zsh & R code\n\n\n\n\n\n\nMar 17, 2022\n\n\nKittipos Sirivongrungson\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Lightbridge",
    "section": "",
    "text": "Email\n  Github\n  Website\n\n  \n  \nHi 👋, I am a medical doctor who gains interest in software developing and data science. I love computer software and developing tools for others and myself to use in real life and also for fun.\nMy first programming language is R, and now it is my favorite tool to analyse data, build R-package, and build cool shiny application."
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "© 2022 Lightbridge"
  },
  {
    "objectID": "posts/2022-05-03_med-calc-timi/index.html",
    "href": "posts/2022-05-03_med-calc-timi/index.html",
    "title": "TIMI Risk Score for STEMI",
    "section": "",
    "text": "Today, I build a simple program to calculate TIMI Risk Score for STEMI [1] using R code.\nThe calculator will simply base on this table chart."
  },
  {
    "objectID": "posts/2022-05-03_med-calc-timi/index.html#main-function-timi_calc",
    "href": "posts/2022-05-03_med-calc-timi/index.html#main-function-timi_calc",
    "title": "TIMI Risk Score for STEMI",
    "section": "Main Function: TIMI_calc()",
    "text": "Main Function: TIMI_calc()\nFunction’s Parameter\nHistorical\n\nage: (int) Age in years\nDM: (lgl) Any DM ?\nHTN: (lgl) Any HTN ?\nangina: (lgl) Any angina ?\n\nExam\n\nSBP: (dbl) Systolic Blood Pressure (mmHg)\nHR: (dbl) Heart Rate (bpm)\nKillip: (lgl) Killip Class form 1 - 4\nwt: (dbl) Weight in kg\n\nPresentation\n\nAnt_STE: (lgl) Anterior STE ?\nLBBB: (lgl) LBBB ?\ntime_to_rx: (dbl) time to treatment (hr)\n\nReturn value: A data frame with 3 columns:\n\nrisk.score: TIMI risk score\nodds.death.30d: estimated odds of death by 30 day.\np.death.30d: estimated probability of death by 30 day."
  },
  {
    "objectID": "posts/2022-05-03_med-calc-timi/index.html#helper-function",
    "href": "posts/2022-05-03_med-calc-timi/index.html#helper-function",
    "title": "TIMI Risk Score for STEMI",
    "section": "Helper Function",
    "text": "Helper Function\nSince the original table reports as odds not a probability of death by 30 day. We need to write a function to convert odds to probability.\nOdds of death is a ratio of the probability of death to the probability of survival; we can write the Equation 1 (\\(p\\) denotes the probability of death).\n\\[\nodd = \\frac{p}{1-p}\n\\qquad(1)\\]\nRearranging terms \\(p\\) to the left, we get:\n\\[\np = \\frac{odd}{odd + 1}\n\\]\nTherefore we can write function odds_to_prob().\n\n\nCode\nodds_to_prob <- function(odds) odds / (odds + 1)"
  },
  {
    "objectID": "posts/2022-05-03_med-calc-timi/index.html#lookup-table",
    "href": "posts/2022-05-03_med-calc-timi/index.html#lookup-table",
    "title": "TIMI Risk Score for STEMI",
    "section": "Lookup Table",
    "text": "Lookup Table\nrisk_df is a lookup table that maps risk score to the odds and probability of death.\n\n\nCode\nrisk_df <- tibble::tibble(\n  risk.score = 0:8,\n  odds.death.30d = c(0.1, 0.3, 0.4, 0.7, 1.2, 2.2, 3, 4.8, 5.8)\n  ) %>% \n  # Test Convert Odds to Probability\n  mutate(p.death.30d = odds_to_prob(odds.death.30d))\n\nrisk_df\n\n\n\n \n  \n    risk.score \n    odds.death.30d \n    p.death.30d \n  \n \n\n  \n    0 \n    0.1 \n    0.0909091 \n  \n  \n    1 \n    0.3 \n    0.2307692 \n  \n  \n    2 \n    0.4 \n    0.2857143 \n  \n  \n    3 \n    0.7 \n    0.4117647 \n  \n  \n    4 \n    1.2 \n    0.5454545 \n  \n  \n    5 \n    2.2 \n    0.6875000 \n  \n  \n    6 \n    3.0 \n    0.7500000 \n  \n  \n    7 \n    4.8 \n    0.8275862 \n  \n  \n    8 \n    5.8 \n    0.8529412 \n  \n\n\n\n\n\n\nCode\nrisk_df %>% \n  ggplot(aes(risk.score, p.death.30d, color = risk.score)) +\n  geom_point(alpha = 0.8, size = 3, show.legend = F) +\n  geom_smooth(se = FALSE, size = 0.5, lty = \"dashed\", show.legend = F) +\n  scale_color_viridis_c(option = \"plasma\", \n                        begin = 0.1,end = 0.8) +\n  labs(x = \"TIMI risk score\", y = \"Probability of death (30d)\")\n\n\n\n\n\n\n\n\n\nKeep in mind that if risk score is > 8, the odds of death by 30 day would be 8.8 but this would be impossible to include in the data frame."
  }
]